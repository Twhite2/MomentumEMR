# Momentum EMR - Pre-Deployment Build Check Script
# This script ensures all errors are caught before pushing to production

Write-Host "üöÄ Momentum EMR - Pre-Deployment Check" -ForegroundColor Cyan
Write-Host "======================================`n" -ForegroundColor Cyan

# Clear all caches
Write-Host "üßπ Step 1: Clearing caches..." -ForegroundColor Yellow
Remove-Item -Recurse -Force .next -ErrorAction SilentlyContinue
Remove-Item -Force tsconfig.tsbuildinfo -ErrorAction SilentlyContinue
Remove-Item -Recurse -Force node_modules/.cache -ErrorAction SilentlyContinue

Write-Host "‚úÖ Caches cleared!`n" -ForegroundColor Green

# Run TypeScript check with no cache
Write-Host "üìù Step 2: Running TypeScript type check (strict mode)..." -ForegroundColor Yellow
npx tsc --noEmit --incremental false

if ($LASTEXITCODE -ne 0) {
    Write-Host "`n‚ùå TypeScript errors found!" -ForegroundColor Red
    Write-Host "Fix the errors above before deploying.`n" -ForegroundColor Red
    exit 1
}

Write-Host "‚úÖ TypeScript check passed!`n" -ForegroundColor Green

# Run ESLint (but don't fail on warnings)
Write-Host "üìã Step 3: Running ESLint..." -ForegroundColor Yellow
pnpm lint

Write-Host "`n‚úÖ Linting complete!`n" -ForegroundColor Green

# Run fresh production build
Write-Host "üî® Step 4: Running production build (no cache)..." -ForegroundColor Yellow
$env:NEXT_TELEMETRY_DISABLED = "1"
pnpm build

if ($LASTEXITCODE -ne 0) {
    Write-Host "`n‚ùå Build failed!" -ForegroundColor Red
    Write-Host "Fix the build errors above before deploying.`n" -ForegroundColor Red
    exit 1
}

Write-Host "`n‚úÖ Build successful!" -ForegroundColor Green

# Summary
Write-Host "`n======================================" -ForegroundColor Cyan
Write-Host "üéâ All checks passed!" -ForegroundColor Green
Write-Host "üöÄ Ready for deployment to Railway!" -ForegroundColor Cyan
Write-Host "======================================`n" -ForegroundColor Cyan
